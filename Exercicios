#Exercicios 1
package main

import (
	"fmt"
	"math"
)

type circulo struct {
	raio float64
}

func areacirculo(p circulo) (area float64) {
	area = math.Pi * p.raio * p.raio
	return area
}

func main() {
	var c circulo
	fmt.Print("Digite o raio da circunferencia : ")
	fmt.Scan(&c.raio)
	resultado := areacirculo(c)
	fmt.Printf("A area do circulo de raio %.2f Ã© %.2f", c.raio, resultado)
}

#Exercicios 2
package main

import (
	"fmt"
)

type enderco struct {
	rua    string
	numero int
	cidade string
	estado string
}
type pessoa struct {
	nome        string
	idade       int
	meuEndereco enderco
}

func main() {
	var p pessoa
	fmt.Print("Digite o seu nome : ")
	fmt.Scan(&p.nome)
	fmt.Print("Digite sua idade : ")
	fmt.Scan(&p.idade)
	fmt.Print("Digite seu estado : ")
	fmt.Scan(&p.meuEndereco.estado)
	fmt.Print("Digite sua cidade : ")
	fmt.Scan(&p.meuEndereco.cidade)
	fmt.Print("Digite sua rua : ")
	fmt.Scan(&p.meuEndereco.rua)
	fmt.Print("Digite o seu numero : ")
	fmt.Scan(&p.meuEndereco.numero)
	fmt.Println(p.nome)
	fmt.Println(p.idade)
	fmt.Println(p.meuEndereco.estado)
	fmt.Println(p.meuEndereco.cidade)
	fmt.Println(p.meuEndereco.rua)
	fmt.Println(p.meuEndereco.numero)
}

#Exercicios 3
package main

import "fmt"

type triangulo struct {
	base   int
	altura int
}

func areatriangulo(p triangulo) int {
	area := (p.base * p.altura) / 2
	return area
}

func main() {
	var c triangulo
	fmt.Print("Digite a altura: ")
	fmt.Scan(&c.altura)
	fmt.Print("Digite a base: ")
	fmt.Scan(&c.base)
	resultado := areatriangulo(c)
	fmt.Print(resultado)
}

#Exercicios 4
#Exercicios 5
package main

type Musica struct {
	titulo  string
	artista string
	duracao int
}

func encontrarMusicas(playlists []Playlist, nomeMusica string) []Playlist {
	var resultado []Playlist
	for _, playlist := range playlists {
		for _, musica := range playlist.musicas {
			if musica.titulo == nomeMusica {
				resultado = append(resultado, playlist)
			}
		}
	}
	return resultado
}

type Playlist struct {
	nome    string
	musicas []Musica
}

func main() {

}
#Exercicios 6
package main

type Funcionario struct {
	nome    string
	salario float64
	idade   int
}

func increment(f Funcionario, percentual float64) Funcionario {
	f.salario = f.salario + (f.salario * percentual)
	return f
}

func decrement(f Funcionario, percentual float64) Funcionario {
	f.salario = f.salario - (f.salario * percentual)
	return f
}

func calcularTempoServico(f Funcionario) int {
	return f.idade - 18
}

func main() {

}
#Exercicios 7
#Exercicios 8
package main

type Viagem struct {
	origem  string
	destino string
	data    int
	preco   float64
}

func viagemMaisCara(viagens []Viagem) Viagem {
	var viagemMax Viagem
	for _, viagem := range viagens {
		if viagem.preco > viagemMax.preco {
			viagemMax = viagem
		}
	}
	return viagemMax
}

func main() {

}
#Exercicios 9
#Exercicios 10
